# NOTE: this file is managed by puppet
#
# Varnish environment configuration description. This was derived from
# the old style sysconfig/defaults settings
#
# Used by the systemd service script under: /lib/systemd/system/varnish.service
#

# Set this to 1 to make systemd reload try to switch vcl without restart. 
RELOAD_VCL=<%= scope.lookupvar('varnish_reload_vcl') %>

# Main configuration file. You probably want to change it.
VARNISH_VCL_CONF=<%= scope.lookupvar('varnish_vcl_conf') %>

# Default address and port to bind to. Blank address means all IPv4
# and IPv6 interfaces, otherwise specify a host name, an IPv4 dotted
# quad, or an IPv6 address in brackets.
VARNISH_LISTEN_ADDRESS=<%= scope.lookupvar('varnish_listen_address') %>
VARNISH_LISTEN_PORT=<%= scope.lookupvar('varnish_listen_port') %>    

# Admin interface listen address and port
VARNISH_ADMIN_LISTEN_ADDRESS=<%= scope.lookupvar('varnish_admin_listen_address') %>
VARNISH_ADMIN_LISTEN_PORT=<%= scope.lookupvar('varnish_admin_listen_port') %>

# Shared secret file for admin interface
VARNISH_SECRET_FILE=<%= scope.lookupvar('varnish_secret_file') %>

# Backend storage specification, see Storage Types in the varnishd(5)
# man page for details.
<% if scope.lookupvar('storage_type') == 'malloc' %>
VARNISH_STORAGE="<%= scope.lookupvar('storage_type') %>,<%= scope.lookupvar('varnish_storage_size') %>"
<% else %>
VARNISH_STORAGE="<%= scope.lookupvar('storage_type') %>,<%= scope.lookupvar('varnish_storage_file') %>,<%= scope.lookupvar('varnish_storage_size') %>"
<% end %>

# Default TTL used when the backend does not specify one
VARNISH_TTL=<%= scope.lookupvar('varnish_ttl') %>

# User and group for the varnishd worker processes
VARNISH_USER=<%= scope.lookupvar('varnish_user') %>    
VARNISH_GROUP=<%= scope.lookupvar('varnish_group') %>

# Other options, see the man page varnishd(1)
DAEMON_OPTS="-p thread_pool_min=<%= scope.lookupvar('varnish_min_threads') %> -p thread_pool_max=<%= scope.lookupvar('varnish_max_threads') %> -p thread_pool_timeout=<%= scope.lookupvar('varnish_thread_timeout') %>"
